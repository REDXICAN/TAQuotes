// File generated by FlutterFire CLI.
// ignore_for_file: type=lint

/*
 * SECURITY NOTE: Firebase API Keys
 * ================================
 * The API keys in this file are PUBLIC and SAFE to be in source control.
 *
 * These are NOT secret keys. They are:
 * - Client-side API identifiers (not authentication secrets)
 * - Protected by Firebase Security Rules
 * - Domain-restricted (web) and app-restricted (mobile)
 * - Required to be public for the app to connect to Firebase
 *
 * Security is enforced through:
 * - Firebase Authentication (user must be logged in)
 * - Firebase Security Rules (database.rules.json)
 * - Domain restrictions in Firebase Console
 * - App restrictions for mobile platforms
 *
 * Learn more: https://firebase.google.com/docs/projects/api-keys
 */

import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // These are PUBLIC client-side identifiers - NOT secrets!
  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyDkFS0rEFb5B3p6z9In5D-grTvAm0GOWq8',
    appId: '1:1016639818898:web:82356e945f9355a8196a4b',
    messagingSenderId: '1016639818898',
    projectId: 'taquotes',
    authDomain: 'taquotes.firebaseapp.com',
    databaseURL: 'https://taquotes-default-rtdb.firebaseio.com',
    storageBucket: 'taquotes.firebasestorage.app',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyBGeAvfO35-KL0r1UhfzykfGtNeeuK5dyY',
    appId: '1:1016639818898:android:e00dc1a1f5dc009f8e3a5f',
    messagingSenderId: '1016639818898',
    projectId: 'taquotes',
    databaseURL: 'https://taquotes-default-rtdb.firebaseio.com',
    storageBucket: 'taquotes.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyAVCBIzycrcpYxPTqRkSegLrrfqYO8xF5A',
    appId: '1:1016639818898:ios:a5a4f18fc3f17dff8e3a5f',
    messagingSenderId: '1016639818898',
    projectId: 'taquotes',
    databaseURL: 'https://taquotes-default-rtdb.firebaseio.com',
    storageBucket: 'taquotes.firebasestorage.app',
    iosBundleId: 'com.turboair.viewer',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyDkFS0rEFb5B3p6z9In5D-grTvAm0GOWq8',
    appId: '1:1016639818898:web:82356e945f9355a8196a4b',
    messagingSenderId: '1016639818898',
    projectId: 'taquotes',
    authDomain: 'taquotes.firebaseapp.com',
    databaseURL: 'https://taquotes-default-rtdb.firebaseio.com',
    storageBucket: 'taquotes.firebasestorage.app',
  );
}