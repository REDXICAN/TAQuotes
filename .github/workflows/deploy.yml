name: Deploy to Vercel

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  FLUTTER_VERSION: '3.16.0'
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run tests
        run: flutter test --coverage
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
      
      - name: Send test results to Discord
        if: always()
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            curl -H "Content-Type: application/json" \
              -d "{\"content\":\"✅ Tests passed for commit: ${{ github.sha }}\"}" \
              $DISCORD_WEBHOOK
          else
            curl -H "Content-Type: application/json" \
              -d "{\"content\":\"❌ Tests failed for commit: ${{ github.sha }}\"}" \
              $DISCORD_WEBHOOK
          fi

  build-web:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build web
        run: |
          flutter build web --release \
            --dart-define=ENVIRONMENT=production \
            --dart-define=SENTRY_DSN=${{ secrets.SENTRY_DSN }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: build/web

  deploy-vercel:
    needs: build-web
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: build/web
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy to Vercel (Production)
        run: |
          vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "DEPLOYMENT_URL=$(cat deployment-url.txt)" >> $GITHUB_ENV
      
      - name: Log deployment
        env:
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY }}
        run: |
          curl -X POST "https://turbo-air-viewer-default-rtdb.firebaseio.com/deployments.json?auth=$FIREBASE_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "commit": "${{ github.sha }}",
              "branch": "${{ github.ref_name }}",
              "timestamp": "'$(date -u +"%Y-%m-%dT%H:%M:%SZ")'",
              "url": "'${{ env.DEPLOYMENT_URL }}'",
              "author": "${{ github.actor }}",
              "message": "${{ github.event.head_commit.message }}"
            }'
      
      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 Deployed to Vercel: ${{ env.DEPLOYMENT_URL }}'
            })

  deploy-preview:
    needs: build-web
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: build/web
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Deploy Preview to Vercel
        run: |
          vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          vercel build --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }} > deployment-url.txt
          echo "PREVIEW_URL=$(cat deployment-url.txt)" >> $GITHUB_ENV
      
      - name: Comment preview URL
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '👀 Preview: ${{ env.PREVIEW_URL }}'
            })